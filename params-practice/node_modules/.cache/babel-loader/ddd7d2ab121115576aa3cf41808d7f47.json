{"ast":null,"code":"var _jsxFileName = \"/Users/choeseoeun/react-practice-all/params-practice/src/UI/Tags.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport \"./Tags.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Tag() {\n  _s();\n\n  const [tags, setTags] = useState([\"javascript\", \"react\"]); //태그를 담을 배열\n\n  const [tag, setTag] = useState(\"\");\n\n  const removeTag = i => {\n    const clonetags = tags.slice();\n    clonetags.splice(i, 1);\n    setTags(clonetags);\n  };\n\n  const addTag = e => {\n    setTag(e.target.value);\n  };\n\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      handleClick();\n    }\n  };\n\n  const handleClick = () => {\n    setTags([...tags, tag]);\n    setTag(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"tagBox\",\n      children: [tags.map((e, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tag\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: e\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeTag(i),\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Press enter to add tags\",\n        onChange: e => addTag(e),\n        onKeyPress: e => handleKeyPress(e),\n        value: tag\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Tag, \"tJocl8fMpgGYZlYobK7ZWD0kils=\");\n\n_c = Tag;\nexport default Tag;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tag\");","map":{"version":3,"names":["useState","styled","Tag","tags","setTags","tag","setTag","removeTag","i","clonetags","slice","splice","addTag","e","target","value","handleKeyPress","key","handleClick","map"],"sources":["/Users/choeseoeun/react-practice-all/params-practice/src/UI/Tags.js"],"sourcesContent":["import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport \"./Tags.css\";\n\nfunction Tag() {\n  const [tags, setTags] = useState([\"javascript\", \"react\"]); //태그를 담을 배열\n  const [tag, setTag] = useState(\"\");\n  const removeTag = (i) => {\n    const clonetags = tags.slice();\n    clonetags.splice(i, 1);\n    setTags(clonetags);\n  };\n  const addTag = (e) => {\n    setTag(e.target.value);\n  };\n  const handleKeyPress = (e) => {\n    if (e.key === \"Enter\") {\n      handleClick();\n    }\n  };\n  const handleClick = () => {\n    setTags([...tags, tag]);\n    setTag(\"\");\n  };\n\n  return (\n    <>\n      <section className=\"tagBox\">\n        {tags.map((e, i) => (\n          <div key={i}>\n            <div className=\"tag\">\n              <span>{e}</span>\n              <button onClick={() => removeTag(i)}>x</button>\n            </div>\n          </div>\n        ))}\n\n        <input\n          placeholder=\"Press enter to add tags\"\n          onChange={(e) => addTag(e)}\n          onKeyPress={(e) => handleKeyPress(e)}\n          value={tag}\n        />\n      </section>\n    </>\n  );\n}\n\nexport default Tag;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,YAAP;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,CAAC,YAAD,EAAe,OAAf,CAAD,CAAhC,CADa,CAC8C;;EAC3D,MAAM,CAACK,GAAD,EAAMC,MAAN,IAAgBN,QAAQ,CAAC,EAAD,CAA9B;;EACA,MAAMO,SAAS,GAAIC,CAAD,IAAO;IACvB,MAAMC,SAAS,GAAGN,IAAI,CAACO,KAAL,EAAlB;IACAD,SAAS,CAACE,MAAV,CAAiBH,CAAjB,EAAoB,CAApB;IACAJ,OAAO,CAACK,SAAD,CAAP;EACD,CAJD;;EAKA,MAAMG,MAAM,GAAIC,CAAD,IAAO;IACpBP,MAAM,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAN;EACD,CAFD;;EAGA,MAAMC,cAAc,GAAIH,CAAD,IAAO;IAC5B,IAAIA,CAAC,CAACI,GAAF,KAAU,OAAd,EAAuB;MACrBC,WAAW;IACZ;EACF,CAJD;;EAKA,MAAMA,WAAW,GAAG,MAAM;IACxBd,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUE,GAAV,CAAD,CAAP;IACAC,MAAM,CAAC,EAAD,CAAN;EACD,CAHD;;EAKA,oBACE;IAAA,uBACE;MAAS,SAAS,EAAC,QAAnB;MAAA,WACGH,IAAI,CAACgB,GAAL,CAAS,CAACN,CAAD,EAAIL,CAAJ,kBACR;QAAA,uBACE;UAAK,SAAS,EAAC,KAAf;UAAA,wBACE;YAAA,UAAOK;UAAP;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAQ,OAAO,EAAE,MAAMN,SAAS,CAACC,CAAD,CAAhC;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF,GAAUA,CAAV;QAAA;QAAA;QAAA;MAAA,QADD,CADH,eAUE;QACE,WAAW,EAAC,yBADd;QAEE,QAAQ,EAAGK,CAAD,IAAOD,MAAM,CAACC,CAAD,CAFzB;QAGE,UAAU,EAAGA,CAAD,IAAOG,cAAc,CAACH,CAAD,CAHnC;QAIE,KAAK,EAAER;MAJT;QAAA;QAAA;QAAA;MAAA,QAVF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAqBD;;GA1CQH,G;;KAAAA,G;AA4CT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}